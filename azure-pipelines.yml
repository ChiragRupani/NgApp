# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

variables:
  PUBLISHPASS: $(PUBLISHKEY)

trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"
    displayName: "Install Node.js"

  - task: DownloadSecureFile@1
    name: mySecureFile
    inputs:
      secureFile: "5c0324a2-c963-4045-8780-fdf653f2b9e6"
      retryCount: "2"

  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="
      sshPublicKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDB+PvvU1TBgQm7yXww9+IUt/mq3ovKsycjwdbpyfwekaNHt9cvh/deqU1cy24tBWpuMe7TnBM6UEXKEo15kWGeaIelzLpcer1fNUmgPEI82cgkdBPrlL2i7tDufBruiQlgsSBZwOjrWnOpKbOkifA47fiZzpgzSp4LUUhR+/eA9Wbb79BGfXiJpN8xWe42rKUZKx7smMbCTMs1mwHh1GtQFiJdEf5J76Ir+c1upzGOzwnegzS5nUbp59Jvbb7mURT/lm895/kmtI3yk8YehkZHLAAtiDo9ANbDKskpKTL6kOCkxm8iEYCE268r12quiu7zPmIGYeqknKON8E5KDO/puD8c2lWMgEura0Wt3Isz3iWz1EipgV6XvN+eLRKppYFgpQ8j0NBzpbHMZWnvPWutUpk9lZxPM+fjet8xboYH+KwS2kfAU4UZcMZp5UcIBl6+U5MWqQM0Bx0ocpKfXCm5yAFkGz1sX6u14DyCjfxxl/Q2iiRfFthO16mDd58QInkoysDyzlBcGoCm7Jp9aMA9Rn6lVObLPa0PGGZsPu5SkkhsHHJMxoTMcLhJhCBB7A+/a3m4qWC2FAKZF3cpMxWmaAHecd69GSBYmOTYruKtcVP8I0ItwUV7yioIzGy/y8rvhvklkjeysLySOHl6qLghQps4jGv3VHjpU7hid1IXvw== action@github.com"
      sshPassphrase: "$(PUBLISHPASS)"
      sshKeySecureFile: "5c0324a2-c963-4045-8780-fdf653f2b9e6"

  - script: |
      git config --global --add url."git@github.com:".insteadOf "https://github.com/"
      git config --local user.email "action@github.com"
      git config --local user.name "GitHub Action"
      npm install --no-audit --progress=false
      npm run coverage
      npm run deploy
    displayName: "npm install and deploy"

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "$(System.DefaultWorkingDirectory)/Test*.xml"
      testRunTitle: "Publish Angular Tests Results"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: "Cobertura"
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage/ngapp/cobertura-coverage.xml"
      pathToSources: "$(System.DefaultWorkingDirectory)"
      reportDirectory: "$(System.DefaultWorkingDirectory)/coverage/"
      failIfCoverageEmpty: true
